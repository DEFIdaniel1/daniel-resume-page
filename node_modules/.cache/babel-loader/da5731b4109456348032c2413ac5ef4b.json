{"ast":null,"code":"var _jsxFileName = \"/Users/nala/Documents/Coding Projects/Udemy React Complete/modul-msg-project/src/Components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\"; //Adds new user with username/age inputs and submit button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  //add username state for input\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n\n  const userNameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  }; //add age state for input\n\n\n  const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  }; //generate random ID number for unique elements\n\n\n  const newId = Math.random();\n\n  const addUserHandler = event => {\n    event.preventDefault(); //will not submit if empty values\n\n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      return;\n    } //+forces it to be a number for +enteredAge logic to be > 1\n\n\n    if (+enteredAge < 1) {\n      return;\n    } //FROM APP.JS -> liftings state up\n\n\n    props.onAddUser(enteredUserName, enteredAge, newId); //will 2-way bind and clear the form when entered\n\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.input,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addUserHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"username\",\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"username\",\n        type: \"text\",\n        onChange: userNameChangeHandler,\n        value: enteredUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"age\",\n        children: \"Age\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"age\",\n        type: \"number\",\n        onChange: ageChangeHandler,\n        value: enteredAge\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"Add User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"ac1cVc+XEElmAMfYUyMM6y1pk7U=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/nala/Documents/Coding Projects/Udemy React Complete/modul-msg-project/src/Components/Users/AddUser.js"],"names":["React","useState","Card","classes","Button","AddUser","props","enteredUserName","setEnteredUserName","userNameChangeHandler","event","target","value","enteredAge","setEnteredAge","ageChangeHandler","newId","Math","random","addUserHandler","preventDefault","trim","length","onAddUser","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,EAAD,CAAtD;;AACA,QAAMQ,qBAAqB,GAAIC,KAAD,IAAW;AACvCF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD,CAHuB,CAOvB;;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMc,gBAAgB,GAAIL,KAAD,IAAW;AAClCI,IAAAA,aAAa,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD,CATuB,CAazB;;;AACA,QAAMI,KAAK,GAAGC,IAAI,CAACC,MAAL,EAAd;;AAEE,QAAMC,cAAc,GAAIT,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACU,cAAN,GADgC,CAEhC;;AACA,QAAIP,UAAU,CAACQ,IAAX,GAAkBC,MAAlB,KAA6B,CAA7B,IAAkCf,eAAe,CAACc,IAAhB,GAAuBC,MAAvB,KAAkC,CAAxE,EAA2E;AACzE;AACD,KAL+B,CAMhC;;;AACA,QAAI,CAACT,UAAD,GAAc,CAAlB,EAAqB;AACnB;AACD,KAT+B,CAUhC;;;AACAP,IAAAA,KAAK,CAACiB,SAAN,CAAgBhB,eAAhB,EAAiCM,UAAjC,EAA6CG,KAA7C,EAXgC,CAYhC;;AACAF,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAN,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAfD;;AAiBA,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAEL,OAAO,CAACqB,KAAzB;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEL,cAAhB;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,EAAE,EAAC,UADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,QAAQ,EAAEV,qBAHZ;AAIE,QAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,cAFF,eAQE;AAAO,QAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE;AACE,QAAA,EAAE,EAAC,KADL;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,QAAQ,EAAEQ,gBAHZ;AAIE,QAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,cATF,eAeE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAtDD;;GAAMR,O;;KAAAA,O;AAwDN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\";\n\n//Adds new user with username/age inputs and submit button\nconst AddUser = props => {\n  //add username state for input\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const userNameChangeHandler = (event) => {\n    setEnteredUserName(event.target.value);\n  };\n\n  //add age state for input\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n//generate random ID number for unique elements\nconst newId = Math.random();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    //will not submit if empty values\n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      return;\n    }\n    //+forces it to be a number for +enteredAge logic to be > 1\n    if (+enteredAge < 1) {\n      return;\n    }\n    //FROM APP.JS -> liftings state up\n    props.onAddUser(enteredUserName, enteredAge, newId);\n    //will 2-way bind and clear the form when entered\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return (\n    <Card className={classes.input}>\n      <form onSubmit={addUserHandler}>\n        <label htmlFor=\"username\">Username</label>\n        <input\n          id=\"username\"\n          type=\"text\"\n          onChange={userNameChangeHandler}\n          value={enteredUserName}\n        />\n        <label htmlFor=\"age\">Age</label>\n        <input\n          id=\"age\"\n          type=\"number\"\n          onChange={ageChangeHandler}\n          value={enteredAge}\n        />\n        <Button type=\"submit\">Add User</Button>\n      </form>\n    </Card>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}