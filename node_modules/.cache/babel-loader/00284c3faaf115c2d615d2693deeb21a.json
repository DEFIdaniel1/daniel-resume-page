{"ast":null,"code":"var _jsxFileName = \"/Users/nala/Documents/Coding Projects/Portfolio Website/React Portfolio/src/Components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = event => {\n    event.preventDefault();\n    const enteredUserName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value;\n\n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      setError({\n        title: \"Oopsie...\",\n        message: \"Looks like you're missing some information!\"\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Is it possible to be so young?\",\n        message: \"We need an age that's older than 0!\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUserName, enteredAge); //uses ref DOM to reset input values upon submition\n\n    nameInputRef.current.value = \"\";\n    ageInputRef.current.value = \"\";\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onClick: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          ref: nameInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          ref: ageInputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"oeh9P4do1L6ON2Ex+93ODUUduFk=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/nala/Documents/Coding Projects/Portfolio Website/React Portfolio/src/Components/Users/AddUser.js"],"names":["React","useState","useRef","Card","ErrorModal","classes","Button","AddUser","props","nameInputRef","ageInputRef","error","setError","addUserHandler","event","preventDefault","enteredUserName","current","value","enteredAge","trim","length","title","message","onAddUser","errorHandler","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAMC,YAAY,GAAGP,MAAM,EAA3B;AACA,QAAMQ,WAAW,GAAGR,MAAM,EAA1B;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;;AAEA,QAAMY,cAAc,GAAIC,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACC,cAAN;AACA,UAAMC,eAAe,GAAGP,YAAY,CAACQ,OAAb,CAAqBC,KAA7C;AACA,UAAMC,UAAU,GAAGT,WAAW,CAACO,OAAZ,CAAoBC,KAAvC;;AAEA,QAAIC,UAAU,CAACC,IAAX,GAAkBC,MAAlB,KAA6B,CAA7B,IAAkCL,eAAe,CAACI,IAAhB,GAAuBC,MAAvB,KAAkC,CAAxE,EAA2E;AACzET,MAAAA,QAAQ,CAAC;AACPU,QAAAA,KAAK,EAAE,WADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AAED,QAAI,CAACJ,UAAD,GAAc,CAAlB,EAAqB;AACnBP,MAAAA,QAAQ,CAAC;AACPU,QAAAA,KAAK,EAAE,gCADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAR;AAIA;AACD;;AAEDf,IAAAA,KAAK,CAACgB,SAAN,CAAgBR,eAAhB,EAAiCG,UAAjC,EArBgC,CAsBhC;;AACAV,IAAAA,YAAY,CAACQ,OAAb,CAAqBC,KAArB,GAA6B,EAA7B;AACAR,IAAAA,WAAW,CAACO,OAAZ,CAAoBC,KAApB,GAA4B,EAA5B;AACD,GAzBD;;AA2BF,QAAMO,YAAY,GAAG,MAAM;AACvBb,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFD;;AAIE,sBACE;AAAA,eACGD,KAAK,iBACJ,QAAC,UAAD;AACE,MAAA,KAAK,EAAEA,KAAK,CAACW,KADf;AAEE,MAAA,OAAO,EAAEX,KAAK,CAACY,OAFjB;AAGE,MAAA,OAAO,EAAEE;AAHX;AAAA;AAAA;AAAA;AAAA,YAFJ,eASE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEpB,OAAO,CAACqB,KAAzB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEb,cAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,GAAG,EAAEJ;AAHP;AAAA;AAAA;AAAA;AAAA,gBAFF,eAOE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,eAQE;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,GAAG,EAAEC;AAHP;AAAA;AAAA;AAAA;AAAA,gBARF,eAaE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAjED;;GAAMH,O;;KAAAA,O;AAmEN,eAAeA,OAAf","sourcesContent":["import React, { useState, useRef } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\";\n\nconst AddUser = (props) => {\n  const nameInputRef = useRef();\n  const ageInputRef = useRef();\n  const [error, setError] = useState();\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    const enteredUserName = nameInputRef.current.value;\n    const enteredAge = ageInputRef.current.value;\n    \n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      setError({\n        title: \"Oopsie...\",\n        message: \"Looks like you're missing some information!\",\n      });\n      return;\n    }\n\n    if (+enteredAge < 1) {\n      setError({\n        title: \"Is it possible to be so young?\",\n        message: \"We need an age that's older than 0!\",\n      });\n      return;\n    }\n\n    props.onAddUser(enteredUserName, enteredAge);\n    //uses ref DOM to reset input values upon submition\n    nameInputRef.current.value = \"\";\n    ageInputRef.current.value = \"\";\n  };\n\nconst errorHandler = () => {\n    setError(null);\n};\n\n  return (\n    <div>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onClick={errorHandler}\n        />\n      )}\n      {/*logic is if error? output error modal */}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            ref={nameInputRef}\n          />\n          <label htmlFor=\"age\">Age</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            ref={ageInputRef}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}