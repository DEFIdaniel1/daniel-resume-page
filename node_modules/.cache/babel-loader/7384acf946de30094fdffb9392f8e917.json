{"ast":null,"code":"var _jsxFileName = \"/Users/nala/Documents/Coding Projects/Udemy React Complete/modul-msg-project/src/Components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\"; //Adds new user with username/age inputs and submit button\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  //add username state for input\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n\n  const userNameChangeHandler = event => {\n    setEnteredUserName(event.target.value);\n  }; //add age state for input\n\n\n  const [enteredAge, setEnteredAge] = useState(\"\");\n\n  const ageChangeHandler = event => {\n    setEnteredAge(event.target.value);\n  };\n\n  const addUserHandler = event => {\n    event.preventDefault(); //will not submit if empty values\n\n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      return;\n    } //+forces it to be a number for +enteredAge logic to be > 1\n\n\n    if (+enteredAge < 1) {\n      return;\n    } //FROM APP.JS -> liftings state up\n\n\n    props.onAddUser(enteredUserName, enteredAge); //will 2-way bind and clear the form when entered\n\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: \"Uh oh...\",\n      message: \"That's embarrasing. Looks like there's been an error!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"username\",\n          type: \"text\",\n          onChange: userNameChangeHandler,\n          value: enteredUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"age\",\n          children: \"Age\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"age\",\n          type: \"number\",\n          onChange: ageChangeHandler,\n          value: enteredAge\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"ac1cVc+XEElmAMfYUyMM6y1pk7U=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/Users/nala/Documents/Coding Projects/Udemy React Complete/modul-msg-project/src/Components/Users/AddUser.js"],"names":["React","useState","Card","ErrorModal","classes","Button","AddUser","props","enteredUserName","setEnteredUserName","userNameChangeHandler","event","target","value","enteredAge","setEnteredAge","ageChangeHandler","addUserHandler","preventDefault","trim","length","onAddUser","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CAEA;;;;AACA,MAAMC,OAAO,GAAGC,KAAK,IAAI;AAAA;;AACvB;AACA,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCR,QAAQ,CAAC,EAAD,CAAtD;;AACA,QAAMS,qBAAqB,GAAIC,KAAD,IAAW;AACvCF,IAAAA,kBAAkB,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAlB;AACD,GAFD,CAHuB,CAOvB;;;AACA,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;;AACA,QAAMe,gBAAgB,GAAIL,KAAD,IAAW;AAClCI,IAAAA,aAAa,CAACJ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACD,GAFD;;AAIA,QAAMI,cAAc,GAAIN,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACO,cAAN,GADgC,CAEhC;;AACA,QAAIJ,UAAU,CAACK,IAAX,GAAkBC,MAAlB,KAA6B,CAA7B,IAAkCZ,eAAe,CAACW,IAAhB,GAAuBC,MAAvB,KAAkC,CAAxE,EAA2E;AACzE;AACD,KAL+B,CAMhC;;;AACA,QAAI,CAACN,UAAD,GAAc,CAAlB,EAAqB;AACnB;AACD,KAT+B,CAUhC;;;AACAP,IAAAA,KAAK,CAACc,SAAN,CAAgBb,eAAhB,EAAiCM,UAAjC,EAXgC,CAYhC;;AACAC,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAN,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACD,GAfD;;AAiBA,sBACE;AAAA,4BACE,QAAC,UAAD;AACE,MAAA,KAAK,EAAC,UADR;AAEE,MAAA,OAAO,EAAC;AAFV;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAEL,OAAO,CAACkB,KAAzB;AAAA,6BACE;AAAM,QAAA,QAAQ,EAAEL,cAAhB;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,EAAE,EAAC,UADL;AAEE,UAAA,IAAI,EAAC,MAFP;AAGE,UAAA,QAAQ,EAAEP,qBAHZ;AAIE,UAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAQE;AAAO,UAAA,OAAO,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,QAAQ,EAAEQ,gBAHZ;AAIE,UAAA,KAAK,EAAEF;AAJT;AAAA;AAAA;AAAA;AAAA,gBATF,eAeE,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAzDD;;GAAMR,O;;KAAAA,O;AA2DN,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\n\nimport Card from \"../UI/Card\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport Button from \"./Button\";\n\n//Adds new user with username/age inputs and submit button\nconst AddUser = props => {\n  //add username state for input\n  const [enteredUserName, setEnteredUserName] = useState(\"\");\n  const userNameChangeHandler = (event) => {\n    setEnteredUserName(event.target.value);\n  };\n\n  //add age state for input\n  const [enteredAge, setEnteredAge] = useState(\"\");\n  const ageChangeHandler = (event) => {\n    setEnteredAge(event.target.value);\n  };\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    //will not submit if empty values\n    if (enteredAge.trim().length === 0 || enteredUserName.trim().length === 0) {\n      return;\n    }\n    //+forces it to be a number for +enteredAge logic to be > 1\n    if (+enteredAge < 1) {\n      return;\n    }\n    //FROM APP.JS -> liftings state up\n    props.onAddUser(enteredUserName, enteredAge);\n    //will 2-way bind and clear the form when entered\n    setEnteredAge(\"\");\n    setEnteredUserName(\"\");\n  };\n\n  return (\n    <div>\n      <ErrorModal\n        title=\"Uh oh...\"\n        message=\"That's embarrasing. Looks like there's been an error!\"\n      />\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"username\">Username</label>\n          <input\n            id=\"username\"\n            type=\"text\"\n            onChange={userNameChangeHandler}\n            value={enteredUserName}\n          />\n          <label htmlFor=\"age\">Age</label>\n          <input\n            id=\"age\"\n            type=\"number\"\n            onChange={ageChangeHandler}\n            value={enteredAge}\n          />\n          <Button type=\"submit\">Add User</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}